#.interface: fill=lightblue
#.enumeration: fill=lightgreen
#.type: fill=lightgray
[AppModule||]
[AuthModule||]
[BrandsModule||]
[SeedService|-userService: UsersService|+seedData(): Promise<void>]
[ProductsModule||]
[UsersModule||]
[WeightRegisterModule||]
[AuthController|-authService: AuthService|+login(): Promise<{ access_token: string; }>;+getJwt(): Promise<{ msg: string; }>]
[JwtAuthGuard||+canActivate(): boolean \| Promise<boolean> \| Observable<boolean>;+handleRequest(): any]
[LocalAuthGuard||]
[RolesGuard|-reflector: Reflector|+canActivate(): boolean]
[CanActivate]<:--[RolesGuard]
[AuthService|-usersService: UsersService;-jwtService: JwtService|+validateUser(): Promise<any>;+login(): Promise<{ access_token: string; }>]
[JwtStrategy||+validate(): Promise<{ email: any; userId: any; roles: any; }>]
[Strategy]<:-[JwtStrategy]
[LocalStrategy|-authService: AuthService|+validate(): Promise<any>]
[Strategy]<:-[LocalStrategy]
[BrandsController|-brandsService: BrandsService|+create(): Promise<any>;+findAll(): Promise<Brand\[\]>;+findOne(): Promise<Brand>;+update(): UpdateBrandDto;+remove(): Promise<{ msg: string; }>]
[BrandsService|-brandModel: typeof Brand|+create(): Promise<any>;+findAll(): Promise<Brand\[\]>;+findOne(): Promise<Brand>;+update(): UpdateBrandDto;+remove(): Promise<{ msg: string; }>]
[ProductsController|-productsService: ProductsService|+create(): Promise<any>;+findAll(): Promise<Product\[\]>;+findOne(): Promise<Product>;+update(): Promise<string>;+remove(): Promise<{ msg: string; }>]
[ProductsService|-productModel: typeof Product|+create(): Promise<any>;+findAll(): Promise<Product\[\]>;+findOne(): Promise<Product>;+update(): Promise<string>;+remove(): Promise<{ msg: string; }>]
[UsersController|-usersService: UsersService;-patchUserTransformer: PatchUserTransformer|+create(): Promise<{ user_created: boolean; data: any; }>;+findAll(): Promise<User\[\]>;+findOne(): Promise<User>;+update(): Promise<User>;+remove(): Promise<{ msg: string; }>]
[UsersService|-userModel: typeof User|+create(): Promise<any>;+findAll(): Promise<User\[\]>;+findOne(): Promise<User>;+update(): Promise<User>;+remove(): Promise<{ msg: string; }>;+findEmail(): Promise<User>]
[ScaleGateway|+server: Server<DefaultEventsMap, DefaultEventsMap, DefaultEventsMap, any>;-scaleService: ScaleService|+afterInit(): void;+handleConnection(): void;+handleDisconnect(): void;+handleJoinRoom(): void;+handleIncommingMessage(): void;+handleRoomLeave(): void]
[OnGatewayInit<T>]<:--[ScaleGateway]
[OnGatewayConnection<T>]<:--[ScaleGateway]
[OnGatewayDisconnect<T>]<:--[ScaleGateway]
[ScaleService|-isDeviceConnected: boolean|+setIsDeviceConnected(): void;+getIsDeviceConnected(): boolean]
[WeightRegisterController|-weightRegisterService: WeightRegisterService|+create(): Promise<any>;+findAll(): Promise<WeightRegister\[\]>;+findOne(): Promise<WeightRegister>]
[WeightRegisterService|-weightRegister: typeof WeightRegister|+create(): Promise<any>;+findAll(): Promise<WeightRegister\[\]>;+findOne(): Promise<WeightRegister>;+update(): Promise<string>;+remove(): Promise<string>]
[CreateBrandDto|+name: string;+distributor?: string|]
[UpdateBrandDto||]
[Brand|+name: string;+distributor: string|]
[Model<TModelAttributes,TCreationAttributes>]<:-[Brand]
[CreateProductDto|+name: string;+price: number;+quantity: number;+brand_id: number;+type?: string;+initialWeight: string|]
[UpdateProductDto||]
[Product|+name: string;+price: number;+quantity: number;+brand_id: number;+brand: Brand;+type: string;+initialWeight: number|]
[Model<TModelAttributes,TCreationAttributes>]<:-[Product]
[CreateUserDto|+name: string;+surname: string;+email: string;+password: string;+role?: number|]
[UpdateUserDto|+name?: string;+surname?: string;+password?: string;+role?: number;+isActive: boolean|]
[User|+name: string;+surname: string;+email: string;+password: string;+role: number;+isActive: boolean|]
[Model<TModelAttributes,TCreationAttributes>]<:-[User]
[<enumeration>Role|Admin;User]
[PatchUserTransformer||+transform(): UpdateUserDto]
[CreateWeightRegisterDto|+weight: number;+product_id: number;+user_id: number|]
[UpdateWeightRegisterDto||]
[WeightRegister|+weight: number;+product_id: number;+product: Product;+user_id: number;+user: User|]
[Model<TModelAttributes,TCreationAttributes>]<:-[WeightRegister]